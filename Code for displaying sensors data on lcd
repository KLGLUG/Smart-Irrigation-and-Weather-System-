
#include <LiquidCrystal.h>
#include "DHT.h"

#define DHTPIN 9     // what digital pin we're connected to

// Uncomment whatever type you're using!
#define DHTTYPE DHT11   // DHT 11
//#define DHTTYPE DHT22   // DHT 22  (AM2302), AM2321
//#define DHTTYPE DHT21   // DHT 21 (AM2301)

// Connect pin 1 (on the left) of the sensor to +5V
// NOTE: If using a board with 3.3V logic like an Arduino Due connect pin 1
// to 3.3V instead of 5V!
// Connect pin 2 of the sensor to whatever your DHTPIN is
// Connect pin 4 (on the right) of the sensor to GROUND
// Connect a 10K resistor from pin 2 (data) to pin 1 (power) of the sensor

// Initialize DHT sensor.
// Note that older versions of this library took an optional third parameter to
// tweak the timings for faster processors.  This parameter is no longer needed
// as the current DHT reading algorithm adjusts itself to work on faster procs.
DHT dht(DHTPIN, DHTTYPE);
LiquidCrystal lcd(12, 11, 5, 4, 3, 2);

int sensorPin = A0;// select the input pin for the moisture sensor
int sv = 0;  // variable to store the value coming from the sensor
int lcdPin = 7;      // select the pin for the LcD

void setup() {
  Serial.begin(9600);
  Serial.println("DHT11 test!");
  lcd.begin(16,2); //16 by 2 character display
  dht.begin();
  pinMode(lcdPin, OUTPUT);
}

void loop() {
  // Wait a few seconds between measurements.
  delay(2000);

  // Reading temperature or humidity takes about 250 milliseconds!
  // Sensor readings may also be up to 2 seconds 'old' (its a very slow sensor)
  float h = dht.readHumidity();
  // Read temperature as Celsius (the default)
  float t = dht.readTemperature();
  // Read temperature as Fahrenheit (isFahrenheit = true)
  //float f = dht.readTemperature(true);

  // Check if any reads failed and exit early (to try again).
  if (isnan(h) || isnan(t)) {
    Serial.println("Failed to read from DHT sensor!");
    return;
  
  }
  
  lcd.clear();
  lcd.setCursor(0,0);
  lcd.print("klug climate mon");
  
  lcd.setCursor(0,1);
  lcd.print("H:");
  lcd.print(int(h));
  lcd.print("%");
  
 
  lcd.setCursor(6,1);
  lcd.print("T:");
  lcd.print(int(t));
  lcd.print("*C");
  delay(1000);
  
  //lcd.clear();
  lcd.setCursor(13,1);
  sv = analogRead(sensorPin);
  int sv1 = map(sv ,0, 1024, 0, 600);
  lcd.print(sv1);  
 
 }
